type Profile @entity {
  id: ID!
  address: String @index
  handle: String @index
  imageURI: String
  profileId: Int!
  posts: [Post!] @derivedFrom(field: "creatorProfile")
  comments: [Comment!] @derivedFrom(field: "profile")
  mirrors: [Mirror!] @derivedFrom(field: "profile")
  timestamp: DateTime! @index
}

type Post @entity {
  id: ID!
  contentURI: String
  postId: Int!
  profileId: Int!
  mirrors: [Mirror!] @derivedFrom(field: "originalPost")
  creatorProfile: Profile! @index
  timestamp: DateTime! @index
}

type Comment @entity {
  id: ID!
  contentURI: String!
  commentId: Int!
  profileId: Int!
  profile: Profile! @index
  originalPostId: Int!
  originalPost: Post!
  originalProfileId: Int!
  originalProfile: Profile! @index
  timestamp: DateTime! @index
}

type Mirror @entity {
  id: ID!
  postId: Int! 
  post: Post!
  profileId: Int! 
  profile: Profile! 
  originalPostId: Int! 
  originalPost: Post! 
  originalProfileId: Int!
  originalProfile: Profile!
  timestamp: DateTime! @index
}

type CollectAction @entity {
  id: ID!
  postId: Int!
  post: Post!
  creatorProfileId: Int!
  creatorProfile:  Profile!
  collectorProfile: Profile!
  timestamp: DateTime! @index
}